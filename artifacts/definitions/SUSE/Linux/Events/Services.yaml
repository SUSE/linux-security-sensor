name: SUSE.Linux.Events.Services

description: |
  This artifact collects new systemd services events.

required_permissions:
  - EXECVE

precondition: |
  SELECT OS From info() where OS = 'linux'

type: CLIENT_EVENT

sources:
  - query: |
      -- grok pattern to parse systemctl show output
      LET pattern = "%{NUMBER:pid}\n\{ path\=%{DATA:process} .*\n%{DATA:description}\n%{DATA:state}\n"

      -- local function runs systemctl, parses output and deconstructs dict from grok
      LET serviceDetails(name) = SELECT pid, process, description, state
        FROM foreach(
          row= { SELECT grok(data=stdout, grok=pattern) AS parsed
                 FROM execve(argv=["systemctl", "show", name, "--value", "--property=ExecMainPID,ExecStart,Description,ActiveState"]) },
          column="parsed")

      LET serviceStartEvents = SELECT
        timestamp(epoch=REALTIME_TIMESTAMP) AS Timestamp,
        UNIT AS Service,
        _UID AS UID,
        { SELECT * FROM serviceDetails(name=UNIT) } AS details
      FROM watch_journal()
      WHERE SYSLOG_IDENTIFIER = "systemd"
        AND JOB_TYPE = "start"
        AND JOB_RESULT = "done"
        AND _PID = "1"
        AND UNIT =~ "service$"

      SELECT
        Timestamp,
        Service,
        "root" AS User,
        details.pid AS PID,
        details.process AS Process,
        details.description AS Description,
        details.state AS State
      FROM serviceStartEvents

