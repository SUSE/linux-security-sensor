name: Linux.Events.ProcessStatuses
description: |
  This artifact collects New process status logs from the Linux kernel.

  This artifact relies on the presence of `auditctl` usually included
  in the auditd package. On Ubuntu you can install it using:

  ```
  apt-get install auditd
  ```

precondition: SELECT OS From info() where OS = 'linux'

type: CLIENT_EVENT

required_permissions:
  - EXECVE

parameters:
  - name: pathToAuditctl
    default: /sbin/auditctl
    description: We depend on auditctl to install the correct process execution rules.

sources:
  - query: |
     // Install the auditd rule if possible.
     // Remove default filter if any
     LET _ <= SELECT * FROM execve(argv=[pathToAuditctl, "-d", "task,never"])

     LET _ <= SELECT * FROM execve(argv=[pathToAuditctl, "-a",
          "exit,always", "-F", "arch=b64", "-F", "auid!=-1", "-F",
          "euid!=0", "-S", "execve", "-k", "proexec"])

     LET _ <= SELECT * FROM execve(argv=[pathToAuditctl, "-a",
          "exit,always", "-F", "arch=b32", "-F", "auid!=-1", "-F",
          "euid!=0", "-S", "execve", "-k", "proexec"])

     LET proc_exec_log = SELECT timestamp(string=Timestamp) AS Time, Sequence,
           atoi(string=Process.PID) AS Pid,
           atoi(string=Process.PPID) AS Ppid,
           Process.PPID AS PPID,
           atoi(string=Summary.Actor.Primary) AS UserId,
           Result AS State,
           Process.Title AS CmdLine,
           Process.Exe AS Exe,
           Process.CWD AS CWD,
           hash(path=Process.Exe) AS Hash
       FROM audit()
       WHERE "proexec" in Tags

     // Cache Uid -> Username mapping.
     LET usrs <= SELECT User, atoi(string=Uid) AS Uid
       FROM Artifact.Linux.Sys.Users()

     // Enrich the original artifact with more data.
     SELECT Time, Pid, Ppid, UserId,
              { SELECT User from usrs WHERE Uid = UserId} AS User,
              regex_replace(source=read_file(filename= "/proc/" + PPID + "/cmdline"),
                            replace=" ", re="[\\0]") AS Parent,
              State,CmdLine,
              CWD, Exe AS ImagePath, Hash.SHA256 AS Hash_Sha256, Hash.SHA1 AS Hash_Sha1
       FROM proc_exec_log
